(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-061279e8"],{"82b6":function(n,t){n.exports='# <center> DataTable 组件说明 </center>\r\n\r\n> 该组件是基于 Element UI 开发的，所以 el-table、el-table-column、el-pagination 的属性及方法、事件对该组件同样适用。下面列举的是扩展部分。\r\n\r\n#### Use\r\n\r\n```html\r\n<data-table v-bind="Attributes" v-on="Events" ...>\r\n  <data-table-column prop="xxx" label="xxx" ...></data-table-column>\r\n  ...\r\n</data-table>\r\n```\r\n\r\n#### DataTable.Attributes\r\n\r\n| 参数         | 说明                                                     | 类型     | 可选值                   | 默认值                 |\r\n| :----------- | :------------------------------------------------------- | :------- | :----------------------- | :--------------------- |\r\n| pageOptions  | 分页参数                                                 | Object   | el-pagination.Attributes | [如下例](#pageOptions) |\r\n| csvOptions   | csv 参数                                                 | Object   | ——                       | [如下例](#csvOptions)  |\r\n| loadDataFunc | 接收列表数据查询方法 ,[如下例](#loadDataFunc)            | Function | ——                       | null                   |\r\n| title        | 表格标题                                                 | String   | ——                       | "Data Table"           |\r\n| loadDataFunc | 接收列表数据查询方法                                     | Function | ——                       | null                   |\r\n| index        | 是否开启索引列，该索引列是基于记录总数非基于列表显示总数 | Boolean  | ——                       | false                  |\r\n| columnButton | 是否开启动态列显示                                       | Boolean  | ——                       | true                   |\r\n| csvButton    | 是否开启 CSV 下载                                        | Boolean  | ——                       | true                   |\r\n| autoLoad     | 初始加载表格                                             | Boolean  | ——                       | false                  |\r\n| autoUpdate   | 是否显示自动刷新                                         | Boolean  | ——                       | false                  |\r\n| interval     | 自动刷新间隔(s)                                          | Number   | ——                       | 5000                   |\r\n| runTimer     | 定时器开关                                               | Boolean  | ——                       | false                  |\r\n\r\n<div id=\'pageOptions\'></div>\r\n\r\n##### DataTable.Attributes.pageOptions\r\n\r\n```javascript\r\n{\r\n  //总条目数\r\n  total: 0,\r\n  //页码按钮的数量，当总页数超过该值时会折叠\r\n  pagerCount: 7,\r\n  //组件布局，子组件名用逗号分隔\r\n  layout: "prev, pager, next,total,sizes",\r\n  //是否为分页按钮添加背景色\r\n  background: false,\r\n  //只有一页时是否隐藏\r\n  hideOnSinglePage: true,\r\n  //每页显示条目个数\r\n  pageSize: 10,\r\n  //当前页数\r\n  currentPage: 1,\r\n  //每页显示个数选择器的选项设置\r\n  pageSizes: [10, 20, 40, 60, 100],\r\n  //是否禁用\r\n  disabled: false\r\n}\r\n```\r\n\r\n<div id=\'csvOptions\'></div>\r\n\r\n##### DataTable.Attributes.csvOptions\r\n\r\n```javascript\r\n{\r\n  //文件名\r\n  filename: "table.csv",\r\n  //是否导出源数据\r\n  original: false,\r\n  //是否显示表头\r\n  isHeader: true,\r\n  //是否马上下载，如果设置为 false 则通过返回结果为内容的 Promise\r\n  download: true,\r\n  //自定义数据\r\n  data: null,\r\n  //自定义列\r\n  columns: null,\r\n  //列过滤方法，该函数 Function(row,index,list) 的返回值用来决定该列是否导出\r\n  columnFilterMethod: column =>\r\n    ["index", "selection", "expand"].indexOf(column.type) === -1 &&\r\n    column.property,\r\n  //数据过滤方法，该函数 Function(row,index,list) 的返回值用来决定该数据是否导出\r\n  dataFilterMethod: (row, index, list) => {\r\n    return true;\r\n  }\r\n}\r\n```\r\n\r\n<div id =\'loadDataFunc\'></div>\r\n\r\n##### DataTable.Attributes.loadDataFunc\r\n\r\n```javascript\r\nloadData: function(params) {\r\n  return ajax.get("/sys/datatable", { params: params });\r\n}\r\n```\r\n\r\n#### DataTable.Methods\r\n\r\n| 方法名    | 说明                     | 参数                                    |\r\n| :-------- | :----------------------- | :-------------------------------------- |\r\n| loadData  | 表格数据加载方法，如下例 | Object [查询参数]                       |\r\n| doLock    | 开启表格遮罩             | ——                                      |\r\n| doUnlock  | 关闭表格遮罩             | ——                                      |\r\n| exportCsv | 导出 CSV 文件            | Object [[csvOptions 对象](#csvOptions)] |\r\n'},"875a":function(n,t,a){"use strict";a.r(t);var e=function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("flex-container",{staticClass:"cron-tab-page",attrs:{direction:"column",wrap:"nowrap"}},[a("flex-item",[a("el-alert",{staticClass:"margin-bottom-10",attrs:{title:"数据分页表格组件",type:"success",closable:!1,description:"这是一个数据分页表格组件，配合定制的后台可配置出复杂的使用场景，使用简单。"}})],1),a("flex-item",[a("el-card",{attrs:{shadow:"hover"}},[a("flex-container",{attrs:{slot:"header",justifyContent:"space-between"},slot:"header"},[a("flex-item",{attrs:{alignItems:"center"}},[n._v("数据表格")]),a("flex-item",[a("el-button",{attrs:{type:"primary",plain:""},on:{click:n.handleQuery}},[n._v("查询")])],1)],1),a("data-table",{ref:"thetable",attrs:{border:"",index:"","auto-load":"","auto-update":"","column-button":"","csv-button":"",title:"Data Table","load-data-func":n.loadData}},[a("data-table-column",{attrs:{prop:"id",label:"ID","show-overflow-tooltip":""}}),a("data-table-column",{attrs:{prop:"name",label:"姓名","show-overflow-tooltip":""},scopedSlots:n._u([{key:"default",fn:function(t){return[a("el-tag",[n._v(n._s(t.row.name))])]}}])}),a("data-table-column",{attrs:{prop:"email",label:"Email","show-overflow-tooltip":""}}),a("data-table-column",{attrs:{prop:"address",label:"地址","show-overflow-tooltip":""}}),a("data-table-column",{attrs:{prop:"date",label:"日期","show-overflow-tooltip":""}}),a("data-table-column",{attrs:{prop:"remark",label:"备注","show-overflow-tooltip":""}})],1)],1)],1),a("flex-item",[a("markdown-editor",{staticClass:"margin-top-20",attrs:{view:""},model:{value:n.content,callback:function(t){n.content=t},expression:"content"}})],1)],1)},r=[],o=a("e716"),l=a("82b6"),s=a.n(l),i={name:"DataTablePage",data:function(){return{content:s.a,loadData:function(n){return console.log("数据表格请求参数:"),console.log(n),o["a"].get("/sys/queryDataTable",{params:n})}}},methods:{handleQuery:function(){this.$refs["thetable"].loadData({a:1,b:2,c:[{}]}).then(function(n){console.log(n)}).catch(function(n){console.log(n)})}}},c=i,u=a("2877"),d=Object(u["a"])(c,e,r,!1,null,null,null);t["default"]=d.exports}}]);
//# sourceMappingURL=chunk-061279e8.10b7107d.js.map