{"version":3,"sources":["webpack:///./src/renderer/components/DataTable/api.md","webpack:///./src/renderer/views/module/plugin/dataTablePage.vue?454b","webpack:///src/renderer/views/module/plugin/dataTablePage.vue","webpack:///./src/renderer/views/module/plugin/dataTablePage.vue?1fbd","webpack:///./src/renderer/views/module/plugin/dataTablePage.vue"],"names":["module","exports","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","direction","wrap","title","type","closable","description","shadow","slot","justifyContent","alignItems","_v","plain","on","click","handleQuery","ref","border","index","auto-load","auto-update","column-button","csv-button","load-data-func","loadData","prop","label","show-overflow-tooltip","scopedSlots","_u","key","fn","scope","_s","row","name","view","model","value","callback","$$v","content","expression","staticRenderFns","dataTablePagevue_type_script_lang_js_","data","api_default","a","params","console","log","ajax","get","methods","$refs","b","c","then","resp","catch","e","plugin_dataTablePagevue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"mGAAAA,EAAAC,QAAA,2mICAA,IAAAC,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,kBAA4BE,YAAA,gBAAAC,MAAA,CAAmCC,UAAA,SAAAC,KAAA,WAAsC,CAAAL,EAAA,aAAAA,EAAA,YAAiCE,YAAA,mBAAAC,MAAA,CAAsCG,MAAA,WAAAC,KAAA,UAAAC,UAAA,EAAAC,YAAA,4CAA4G,GAAAT,EAAA,aAAAA,EAAA,WAAoCG,MAAA,CAAOO,OAAA,UAAkB,CAAAV,EAAA,kBAAuBG,MAAA,CAAOQ,KAAA,SAAAC,eAAA,iBAAiDD,KAAA,UAAe,CAAAX,EAAA,aAAkBG,MAAA,CAAOU,WAAA,WAAuB,CAAAjB,EAAAkB,GAAA,UAAAd,EAAA,aAAAA,EAAA,aAAmDG,MAAA,CAAOI,KAAA,UAAAQ,MAAA,IAA4BC,GAAA,CAAKC,MAAArB,EAAAsB,cAAyB,CAAAtB,EAAAkB,GAAA,gBAAAd,EAAA,cAA0CmB,IAAA,WAAAhB,MAAA,CAAsBiB,OAAA,GAAAC,MAAA,GAAAC,YAAA,GAAAC,cAAA,GAAAC,gBAAA,GAAAC,aAAA,GAAAnB,MAAA,aAAAoB,iBAAA9B,EAAA+B,WAA8I,CAAA3B,EAAA,qBAA0BG,MAAA,CAAOyB,KAAA,KAAAC,MAAA,KAAAC,wBAAA,MAAqD9B,EAAA,qBAA0BG,MAAA,CAAOyB,KAAA,OAAAC,MAAA,KAAAC,wBAAA,IAAsDC,YAAAnC,EAAAoC,GAAA,EAAsBC,IAAA,UAAAC,GAAA,SAAAC,GAAiC,OAAAnC,EAAA,UAAAJ,EAAAkB,GAAAlB,EAAAwC,GAAAD,EAAAE,IAAAC,gBAA2DtC,EAAA,qBAA0BG,MAAA,CAAOyB,KAAA,QAAAC,MAAA,QAAAC,wBAAA,MAA2D9B,EAAA,qBAA0BG,MAAA,CAAOyB,KAAA,UAAAC,MAAA,KAAAC,wBAAA,MAA0D9B,EAAA,qBAA0BG,MAAA,CAAOyB,KAAA,OAAAC,MAAA,KAAAC,wBAAA,MAAuD9B,EAAA,qBAA0BG,MAAA,CAAOyB,KAAA,SAAAC,MAAA,KAAAC,wBAAA,OAAyD,WAAA9B,EAAA,aAAAA,EAAA,mBAAoDE,YAAA,gBAAAC,MAAA,CAAmCoC,KAAA,IAAUC,MAAA,CAAQC,MAAA7C,EAAA,QAAA8C,SAAA,SAAAC,GAA6C/C,EAAAgD,QAAAD,GAAgBE,WAAA,cAAuB,QACnsDC,EAAA,oCC4CAC,EAAA,CACAT,KAAA,gBACAU,KAFA,WAGA,OACAJ,QAAAK,EAAAC,EACAvB,SAAA,SAAAwB,GAGA,OAFAC,QAAAC,IAAA,aACAD,QAAAC,IAAAF,GACAG,EAAA,KAAAC,IAAA,uBAAAJ,cAIAK,QAAA,CACAtC,YADA,WAEArB,KAAA4D,MAAA,YACA9B,SAAA,CAAAuB,EAAA,EAAAQ,EAAA,EAAAC,EAAA,OACAC,KAAA,SAAAC,GACAT,QAAAC,IAAAQ,KAEAC,MAAA,SAAAC,GACAX,QAAAC,IAAAU,QCjEoYC,EAAA,cCOpYC,EAAgBC,OAAAC,EAAA,KAAAD,CACdF,EACArE,EACAmD,GACF,EACA,KACA,KACA,MAIesB,EAAA,WAAAH","file":"js/chunk-061279e8.10b7107d.js","sourcesContent":["module.exports = \"# <center> DataTable 组件说明 </center>\\r\\n\\r\\n> 该组件是基于 Element UI 开发的，所以 el-table、el-table-column、el-pagination 的属性及方法、事件对该组件同样适用。下面列举的是扩展部分。\\r\\n\\r\\n#### Use\\r\\n\\r\\n```html\\r\\n<data-table v-bind=\\\"Attributes\\\" v-on=\\\"Events\\\" ...>\\r\\n  <data-table-column prop=\\\"xxx\\\" label=\\\"xxx\\\" ...></data-table-column>\\r\\n  ...\\r\\n</data-table>\\r\\n```\\r\\n\\r\\n#### DataTable.Attributes\\r\\n\\r\\n| 参数         | 说明                                                     | 类型     | 可选值                   | 默认值                 |\\r\\n| :----------- | :------------------------------------------------------- | :------- | :----------------------- | :--------------------- |\\r\\n| pageOptions  | 分页参数                                                 | Object   | el-pagination.Attributes | [如下例](#pageOptions) |\\r\\n| csvOptions   | csv 参数                                                 | Object   | ——                       | [如下例](#csvOptions)  |\\r\\n| loadDataFunc | 接收列表数据查询方法 ,[如下例](#loadDataFunc)            | Function | ——                       | null                   |\\r\\n| title        | 表格标题                                                 | String   | ——                       | \\\"Data Table\\\"           |\\r\\n| loadDataFunc | 接收列表数据查询方法                                     | Function | ——                       | null                   |\\r\\n| index        | 是否开启索引列，该索引列是基于记录总数非基于列表显示总数 | Boolean  | ——                       | false                  |\\r\\n| columnButton | 是否开启动态列显示                                       | Boolean  | ——                       | true                   |\\r\\n| csvButton    | 是否开启 CSV 下载                                        | Boolean  | ——                       | true                   |\\r\\n| autoLoad     | 初始加载表格                                             | Boolean  | ——                       | false                  |\\r\\n| autoUpdate   | 是否显示自动刷新                                         | Boolean  | ——                       | false                  |\\r\\n| interval     | 自动刷新间隔(s)                                          | Number   | ——                       | 5000                   |\\r\\n| runTimer     | 定时器开关                                               | Boolean  | ——                       | false                  |\\r\\n\\r\\n<div id='pageOptions'></div>\\r\\n\\r\\n##### DataTable.Attributes.pageOptions\\r\\n\\r\\n```javascript\\r\\n{\\r\\n  //总条目数\\r\\n  total: 0,\\r\\n  //页码按钮的数量，当总页数超过该值时会折叠\\r\\n  pagerCount: 7,\\r\\n  //组件布局，子组件名用逗号分隔\\r\\n  layout: \\\"prev, pager, next,total,sizes\\\",\\r\\n  //是否为分页按钮添加背景色\\r\\n  background: false,\\r\\n  //只有一页时是否隐藏\\r\\n  hideOnSinglePage: true,\\r\\n  //每页显示条目个数\\r\\n  pageSize: 10,\\r\\n  //当前页数\\r\\n  currentPage: 1,\\r\\n  //每页显示个数选择器的选项设置\\r\\n  pageSizes: [10, 20, 40, 60, 100],\\r\\n  //是否禁用\\r\\n  disabled: false\\r\\n}\\r\\n```\\r\\n\\r\\n<div id='csvOptions'></div>\\r\\n\\r\\n##### DataTable.Attributes.csvOptions\\r\\n\\r\\n```javascript\\r\\n{\\r\\n  //文件名\\r\\n  filename: \\\"table.csv\\\",\\r\\n  //是否导出源数据\\r\\n  original: false,\\r\\n  //是否显示表头\\r\\n  isHeader: true,\\r\\n  //是否马上下载，如果设置为 false 则通过返回结果为内容的 Promise\\r\\n  download: true,\\r\\n  //自定义数据\\r\\n  data: null,\\r\\n  //自定义列\\r\\n  columns: null,\\r\\n  //列过滤方法，该函数 Function(row,index,list) 的返回值用来决定该列是否导出\\r\\n  columnFilterMethod: column =>\\r\\n    [\\\"index\\\", \\\"selection\\\", \\\"expand\\\"].indexOf(column.type) === -1 &&\\r\\n    column.property,\\r\\n  //数据过滤方法，该函数 Function(row,index,list) 的返回值用来决定该数据是否导出\\r\\n  dataFilterMethod: (row, index, list) => {\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n<div id ='loadDataFunc'></div>\\r\\n\\r\\n##### DataTable.Attributes.loadDataFunc\\r\\n\\r\\n```javascript\\r\\nloadData: function(params) {\\r\\n  return ajax.get(\\\"/sys/datatable\\\", { params: params });\\r\\n}\\r\\n```\\r\\n\\r\\n#### DataTable.Methods\\r\\n\\r\\n| 方法名    | 说明                     | 参数                                    |\\r\\n| :-------- | :----------------------- | :-------------------------------------- |\\r\\n| loadData  | 表格数据加载方法，如下例 | Object [查询参数]                       |\\r\\n| doLock    | 开启表格遮罩             | ——                                      |\\r\\n| doUnlock  | 关闭表格遮罩             | ——                                      |\\r\\n| exportCsv | 导出 CSV 文件            | Object [[csvOptions 对象](#csvOptions)] |\\r\\n\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('flex-container',{staticClass:\"cron-tab-page\",attrs:{\"direction\":\"column\",\"wrap\":\"nowrap\"}},[_c('flex-item',[_c('el-alert',{staticClass:\"margin-bottom-10\",attrs:{\"title\":\"数据分页表格组件\",\"type\":\"success\",\"closable\":false,\"description\":\"这是一个数据分页表格组件，配合定制的后台可配置出复杂的使用场景，使用简单。\"}})],1),_c('flex-item',[_c('el-card',{attrs:{\"shadow\":\"hover\"}},[_c('flex-container',{attrs:{\"slot\":\"header\",\"justifyContent\":\"space-between\"},slot:\"header\"},[_c('flex-item',{attrs:{\"alignItems\":\"center\"}},[_vm._v(\"数据表格\")]),_c('flex-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"plain\":\"\"},on:{\"click\":_vm.handleQuery}},[_vm._v(\"查询\")])],1)],1),_c('data-table',{ref:\"thetable\",attrs:{\"border\":\"\",\"index\":\"\",\"auto-load\":\"\",\"auto-update\":\"\",\"column-button\":\"\",\"csv-button\":\"\",\"title\":\"Data Table\",\"load-data-func\":_vm.loadData}},[_c('data-table-column',{attrs:{\"prop\":\"id\",\"label\":\"ID\",\"show-overflow-tooltip\":\"\"}}),_c('data-table-column',{attrs:{\"prop\":\"name\",\"label\":\"姓名\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tag',[_vm._v(_vm._s(scope.row.name))])]}}])}),_c('data-table-column',{attrs:{\"prop\":\"email\",\"label\":\"Email\",\"show-overflow-tooltip\":\"\"}}),_c('data-table-column',{attrs:{\"prop\":\"address\",\"label\":\"地址\",\"show-overflow-tooltip\":\"\"}}),_c('data-table-column',{attrs:{\"prop\":\"date\",\"label\":\"日期\",\"show-overflow-tooltip\":\"\"}}),_c('data-table-column',{attrs:{\"prop\":\"remark\",\"label\":\"备注\",\"show-overflow-tooltip\":\"\"}})],1)],1)],1),_c('flex-item',[_c('markdown-editor',{staticClass:\"margin-top-20\",attrs:{\"view\":\"\"},model:{value:(_vm.content),callback:function ($$v) {_vm.content=$$v},expression:\"content\"}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n * @Author: Sun Rising \r\n * @Date: 2019-05-15 09:02:32 \r\n * @Last Modified by: Sun Rising\r\n * @Last Modified time: 2019-07-10 18:59:30\r\n * @Description: 数据分页表格插件展示\r\n */\r\n<template>\r\n  <flex-container direction='column' wrap='nowrap' class=\"cron-tab-page\">\r\n    <flex-item>\r\n      <el-alert class=\"margin-bottom-10\" title=\"数据分页表格组件\" type=\"success\" :closable='false' description=\"这是一个数据分页表格组件，配合定制的后台可配置出复杂的使用场景，使用简单。\">\r\n      </el-alert>\r\n    </flex-item>\r\n    <flex-item>\r\n      <el-card shadow=\"hover\">\r\n        <flex-container slot=\"header\" justifyContent='space-between'>\r\n          <flex-item alignItems='center'>数据表格</flex-item>\r\n          <flex-item>\r\n            <el-button type=\"primary\" plain @click=\"handleQuery\">查询</el-button>\r\n          </flex-item>\r\n        </flex-container>\r\n        <data-table ref=\"thetable\" border index auto-load auto-update column-button csv-button title=\"Data Table\" :load-data-func='loadData'>\r\n          <data-table-column prop=\"id\" label=\"ID\" show-overflow-tooltip></data-table-column>\r\n          <data-table-column prop=\"name\" label=\"姓名\" show-overflow-tooltip>\r\n            <template slot-scope=\"scope\">\r\n              <el-tag>{{scope.row.name}}</el-tag>\r\n            </template>\r\n          </data-table-column>\r\n          <data-table-column prop=\"email\" label=\"Email\" show-overflow-tooltip></data-table-column>\r\n          <data-table-column prop=\"address\" label=\"地址\" show-overflow-tooltip></data-table-column>\r\n          <data-table-column prop=\"date\" label=\"日期\" show-overflow-tooltip></data-table-column>\r\n          <data-table-column prop=\"remark\" label=\"备注\" show-overflow-tooltip></data-table-column>\r\n        </data-table>\r\n      </el-card>\r\n    </flex-item>\r\n    <flex-item>\r\n      <markdown-editor class=\"margin-top-20\" v-model=\"content\" view></markdown-editor>\r\n    </flex-item>\r\n  </flex-container>\r\n</template>\r\n\r\n<script>\r\nimport ajax from \"@/lib/ajax\";\r\nimport api from \"@/components/DataTable/api.md\";\r\n\r\nexport default {\r\n  name: \"DataTablePage\",\r\n  data() {\r\n    return {\r\n      content: api,\r\n      loadData: function(params) {\r\n        console.log(\"数据表格请求参数:\");\r\n        console.log(params);\r\n        return ajax.get(\"/sys/queryDataTable\", { params: params });\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    handleQuery() {\r\n      this.$refs[\"thetable\"]\r\n        .loadData({ a: 1, b: 2, c: [{}] })\r\n        .then(resp => {\r\n          console.log(resp);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dataTablePage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./dataTablePage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./dataTablePage.vue?vue&type=template&id=2d8a0bae&\"\nimport script from \"./dataTablePage.vue?vue&type=script&lang=js&\"\nexport * from \"./dataTablePage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}